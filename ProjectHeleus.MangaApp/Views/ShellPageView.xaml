<Page x:Class="ProjectHeleus.MangaApp.Views.ShellPageView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:micro="using:Caliburn.Micro"
      xmlns:models="using:ProjectHeleus.WindowsLibrary.Models"
      mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Name="MenuItemTemplate" x:DataType="models:MenuItem">
            <Grid Width="240" Height="47">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="47" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <SymbolIcon Grid.Column="0"
                            Foreground="White"
                            Symbol="{x:Bind Icon, Mode=OneWay}" />
                <TextBlock Grid.Column="1"
                           VerticalAlignment="Center"
                           FontSize="16"
                           Foreground="White"
                           Text="{x:Bind Name, Mode=OneWay}" />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{Binding Source={StaticResource Settings}, Path=PaneBackgroundColor, UpdateSourceTrigger=PropertyChanged}">
        <controls:HamburgerMenu x:Name="Menu"
                                micro:Message.Attach="[Event ItemClick] = [MainMenuItemClick($source, $eventArgs)]; [Event OptionsItemClick] = [OptionMenuItemClick($source, $eventArgs)]"
                                CompactPaneLength="48"
                                Foreground="White"
                                HamburgerHeight="48"
                                ItemTemplate="{StaticResource MenuItemTemplate}"
                                ItemsSource="{Binding Path=MainMenu, UpdateSourceTrigger=PropertyChanged}"
                                OpenPaneLength="240"
                                OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                                OptionsItemsSource="{Binding Path=OptionsMenu, UpdateSourceTrigger=PropertyChanged}"
                                PaneBackground="#464B4D">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Frame Grid.Row="0"
                       micro:Message.Attach="[Event Loaded] = [SetupNavigation($source)]"
                       DataContext="{x:Null}">
                    <Frame.ContentTransitions>
                        <TransitionCollection>
                            <NavigationThemeTransition>
                                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                    <EntranceNavigationTransitionInfo />
                                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                            </NavigationThemeTransition>
                        </TransitionCollection>
                    </Frame.ContentTransitions>
                </Frame>
            </Grid>
        </controls:HamburgerMenu>

        <!--  End Region  -->

        <!--  Region Visual States  -->

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1080" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Menu.IsPaneOpen" Value="True" />
                        <Setter Target="Menu.DisplayMode" Value="CompactInline" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Menu.IsPaneOpen" Value="False" />
                        <Setter Target="Menu.DisplayMode" Value="CompactOverlay" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
